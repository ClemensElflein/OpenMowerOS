[Unit]
Description=OpenMower Stack (docker compose)
Wants=docker.service
After=docker.service network-online.target dockge.service

[Service]
Type=oneshot
RemainAfterExit=yes
TimeoutStartSec=30min
EnvironmentFile=/etc/default/openmower
WorkingDirectory=/opt/stacks/openmower
ExecCondition=/bin/sh -c '[ -f compose.yaml ]'
ExecStartPre=/bin/sh -c 'FILES=(-f compose.yaml); case "$OM_DEBUG" in [Tt][Rr][Uu][Ee]|1|[Yy][Ee][Ss]) [ -f compose.debug.yaml ] && FILES+=( -f compose.debug.yaml ); export OM_IMAGE="${OM_IMAGE:-${OM_REPO}:${OM_VERSION}}"; exec /usr/bin/docker compose "${FILES[@]}" pull --quiet || true'
ExecStart=/bin/sh -c 'FILES=(-f compose.yaml); case "$OM_DEBUG" in [Tt][Rr][Uu][Ee]|1|[Yy][Ee][Ss]) [ -f compose.debug.yaml ] && FILES+=( -f compose.debug.yaml ); export OM_IMAGE="${OM_IMAGE:-${OM_REPO}:${OM_VERSION}}"; exec /usr/bin/docker compose "${FILES[@]}" up -d'
ExecStop=/bin/sh -c 'FILES=(-f compose.yaml); case "$OM_DEBUG" in [Tt][Rr][Uu][Ee]|1|[Yy][Ee][Ss]) [ -f compose.debug.yaml ] && FILES+=( -f compose.debug.yaml ); export OM_IMAGE="${OM_IMAGE:-${OM_REPO}:${OM_VERSION}}"; exec /usr/bin/docker compose "${FILES[@]}" down'

[Install]
WantedBy=multi-user.target
